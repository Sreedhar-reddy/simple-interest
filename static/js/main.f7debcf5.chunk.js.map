{"version":3,"sources":["components/Transfers/Header/TransferHeader.jsx","components/table/TableAction.component.jsx","components/table/Table.component.jsx","components/no-data/NoData.component.jsx","components/Transfers/List/TransferList.jsx","components/Transfers/Page/Page.state.js","components/Transfers/Page/Page.reducer.js","components/Transfers/Page/TransferPage.jsx","components/Transfers/Detail/TransferDetail.jsx","components/Transfers/Initiation/Initiation.state.js","components/Transfers/Initiation/Initiation.reducer.js","components/Transfers/Initiation/TransferInitiation.jsx","components/ModalComp.js","components/ModalButtons.js","components/ShowModal.js","components/Interest/Interest.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["TransferHeader","useContext","TransferContext","headerData","dispatch","Row","Col","md","Form","Control","as","aria-label","value","transferText","onChange","e","type","data","target","disabled","Object","entries","transferType","map","key","InputGroup","searchInput","placeholder","search","Prepend","Text","icon","faSearch","onClick","className","title","to","Button","varient","block","btnText","statusText","searchType","TableActionButton","variant","faPenSquare","faEye","faTrashAlt","TableComponent","tableHeaders","tableBody","Table","bordered","hover","item","index","actKey","actValue","link","active","id","NoDataComp","msg","TransferList","length","errMsg","TransferPageState","posts","comments","albums","photos","todos","users","all","initiated","rejected","accepted","pending","searchText","loading","apiBaseUrl","apiUrl","usersTHead","name","userName","email","action","postsTHead","userId","body","TransferPageReducer","state","payload","createContext","TransferPage","useReducer","useEffect","tableData","axios","get","then","response","username","edit","view","delete","catch","err","message","Container","fluid","color","Provider","Card","Header","Body","TransferDetail","transferDetail","Group","controlId","column","widthProp","width","span","undefined","offset","keyProp","containerClass","class","containerId","valueProp","placeholderProp","elmClass","elmId","changeHandler","clickHandler","Label","options","optKey","optValue","selected","closeOnScroll","dateFormat","date","TransferInitiationState","chooseTransferType","col1","col2","one","two","objKey","colKey","valKey","employeeType","searchValue","transferInitiationHeader","transferInitiationDept","col3","production","staging","transferInitiationPosition","productionTeamLead","stagingTeamLead","transferInitiationCostCentre","IN1058LK","IN1058LH","transferInitiationManager","mohan","sreedhar","transferInitiationLocation","karnataka","goa","transferInitiationFixedGross","transferInitiationPercent","col4","transferInitiationEffectiveDate","Date","transferInitiationFooter","TransferIntiationReducer","TransferInitiation","ModalComp","isShow","modalClose","Modal","show","onHide","size","centered","closeButton","Title","Footer","ModalButtons","handleButtonClick","memo","initialState","ShowModal","useState","modalData","setModalData","useCallback","InterestPage","principal","setPrincipal","interest","setInterest","fromDate","setFromDate","toDate","setToDate","calDateDiff","eDate","moment","rDate","add","years","diff","months","days","projectDuration","trim","maxDate","showMonthDropdown","showYearDropdown","dropdownMode","fromDateHandler","minDate","toDateHandler","preventDefault","formValid","checkValidation","toFixed","interestValue","parseFloat","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7debcf5.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TransferContext } from \"../Page/TransferPage\";\r\n\r\nconst TransferHeader = () => {\r\n  const { headerData, dispatch } = useContext(TransferContext);\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={2}>\r\n        <Form.Control\r\n          as=\"select\"\r\n          aria-label=\"Choose Data\"\r\n          value={headerData.transferText}\r\n          onChange={(e) => {\r\n            dispatch({ type: \"FILTER_TRANSFER\", data: e.target.value });\r\n          }}\r\n        >\r\n          <option disabled>Choose Data</option>\r\n          {Object.entries(headerData.transferType).map(([key, value]) => (\r\n            <option key={key} value={key}>\r\n              {value}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n      </Col>\r\n      <Col md={2}>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={headerData.searchInput}\r\n            placeholder={headerData.search}\r\n            onChange={(e) => {\r\n              dispatch({ type: \"SEARCH_INPUT\", data: e.target.value });\r\n            }}\r\n          />\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              <FontAwesomeIcon\r\n                icon={faSearch}\r\n                onClick={() => {\r\n                  dispatch({ type: \"SEARCH_TRANSFER\" });\r\n                }}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n        </InputGroup>\r\n      </Col>\r\n      <Col\r\n        md={4}\r\n        className=\"font-weight-bold text-uppercase text-center my-auto\"\r\n      >\r\n        {headerData.title}\r\n      </Col>\r\n      <Col md={2}>\r\n        <Link to=\"/transfer-initiate\">\r\n          <Button varient=\"primary\" block>\r\n            {headerData.btnText}\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n      <Col md={2}>\r\n        <Form.Control\r\n          as=\"select\"\r\n          aria-label=\"Choose Status\"\r\n          value={headerData.statusText}\r\n          onChange={(e) => {\r\n            dispatch({ type: \"FILTER_STATUS\", data: e.target.value });\r\n          }}\r\n        >\r\n          <option disabled>Choose Status</option>\r\n          {Object.entries(headerData.searchType).map(([key, value]) => (\r\n            <option key={key} value={key}>\r\n              {value}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default TransferHeader;\r\n","import React from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPenSquare,\r\n  faEye,\r\n  faTrashAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TableActionButton = ({ disabled, type }) => (\r\n  <Col className=\"p-0\">\r\n    <Button variant=\"link\" disabled={disabled}>\r\n      <FontAwesomeIcon\r\n        icon={\r\n          type === \"edit\" ? faPenSquare : type === \"view\" ? faEye : faTrashAlt\r\n        }\r\n      />\r\n    </Button>\r\n  </Col>\r\n);\r\n\r\nexport default TableActionButton;\r\n","import React from \"react\";\r\nimport { Table, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableActionButton from \"./TableAction.component\";\r\nimport \"./Table.style.css\";\r\n\r\nconst TableComponent = ({ tableHeaders, tableBody }) => {\r\n  return (\r\n    <Table bordered hover className=\"transfer-table text-center\">\r\n      <thead>\r\n        <tr>\r\n          {Object.entries(tableHeaders).map(([key, value]) => (\r\n            <th key={key}>{value}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tableBody.map((item) => (\r\n          <tr key={item.id}>\r\n            {Object.entries(item).map(([key, value], index) => {\r\n              if (key === \"action\") {\r\n                return (\r\n                  <td key={`${item.id}_${index}_${key}`}>\r\n                    <Row>\r\n                      {Object.entries(value).map(([actKey, actValue]) => {\r\n                        if (actValue.link !== \"\") {\r\n                          return (\r\n                            <Link\r\n                              to={actValue.link}\r\n                              key={`${item.id}_${index}_${key}_${actKey}`}\r\n                            >\r\n                              <TableActionButton\r\n                                disabled={!actValue.active}\r\n                                type={actKey}\r\n                              />\r\n                            </Link>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <TableActionButton\r\n                              key={`${item.id}_${index}_${key}_${actKey}`}\r\n                              disabled={!actValue.active}\r\n                              type={actKey}\r\n                            />\r\n                          );\r\n                        }\r\n                      })}\r\n                    </Row>\r\n                  </td>\r\n                );\r\n              } else {\r\n                return <td key={`${item.id}_${index}_${key}`}>{value}</td>;\r\n              }\r\n            })}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React from \"react\";\r\nimport \"./NoData.style.css\";\r\n\r\nconst NoDataComp = ({ msg }) => (\r\n  <h2 className=\"text-center text-uppercase text-muted\">{msg}</h2>\r\n);\r\n\r\nexport default NoDataComp;\r\n","import React, { useContext } from \"react\";\r\nimport { TransferContext } from \"../Page/TransferPage\";\r\nimport TableComponent from \"../../table/Table.component\";\r\nimport NoDataComp from \"../../no-data/NoData.component\";\r\nimport \"./TransferList.style.css\";\r\n\r\nconst TransferList = () => {\r\n  const { headerData } = useContext(TransferContext);\r\n\r\n  return (\r\n    <div className=\"table-list\">\r\n      {headerData.tableBody.length === 0 ? (\r\n        <NoDataComp\r\n          msg={headerData.errMsg === \"\" ? \"No Data Found\" : headerData.errMsg}\r\n        />\r\n      ) : (\r\n        <TableComponent\r\n          tableHeaders={headerData[`${headerData.transferText}THead`]}\r\n          tableBody={headerData.tableBody}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default TransferList;\r\n","const TransferPageState = {\r\n  transferType: {\r\n    posts: \"Posts\",\r\n    comments: \"Comments\",\r\n    albums: \"Albums\",\r\n    photos: \"Photos\",\r\n    todos: \"Todos\",\r\n    users: \"Users\",\r\n  },\r\n  search: \"Search Data\",\r\n  title: \"Get Data\",\r\n  btnText: \"Initiate Transfer\",\r\n  searchType: {\r\n    all: \"All\",\r\n    initiated: \"Initiated\",\r\n    rejected: \"Rejected\",\r\n    accepted: \"Accepted\",\r\n    pending: \"Pending\",\r\n  },\r\n  transferText: \"users\",\r\n  searchText: \"\",\r\n  statusText: \"all\",\r\n  searchInput: \"\",\r\n  loading: true,\r\n  errMsg: \"\",\r\n  apiBaseUrl: \"https://jsonplaceholder.typicode.com/\",\r\n  apiUrl: \"https://jsonplaceholder.typicode.com/users\",\r\n  usersTHead: {\r\n    id: \"#\",\r\n    name: \"Name\",\r\n    userName: \"User Name\",\r\n    email: \"Email\",\r\n    action: \"Edit/View\",\r\n  },\r\n  postsTHead: {\r\n    id: \"#\",\r\n    userId: \"User Id\",\r\n    title: \"Title\",\r\n    body: \"Body\",\r\n    action: \"Edit/View\",\r\n  },\r\n  tableBody: [],\r\n};\r\n\r\nexport default TransferPageState;\r\n","const TransferPageReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FILTER_TRANSFER\":\r\n      return {\r\n        ...state,\r\n        transferText: action.data,\r\n        loading: true,\r\n        apiUrl: `${state.apiBaseUrl}${action.data}?status='${state.statusText}'&search='${state.searchText}'`,\r\n      };\r\n    case \"SEARCH_INPUT\":\r\n      return {\r\n        ...state,\r\n        searchInput: action.data,\r\n      };\r\n    case \"SEARCH_TRANSFER\":\r\n      return {\r\n        ...state,\r\n        searchText: state.searchInput,\r\n        loading: state.searchInput !== state.searchText ? true : false,\r\n        apiUrl: `${state.apiBaseUrl}${state.transferText}?status='${state.statusText}'&search='${state.searchInput}'`,\r\n      };\r\n    case \"FILTER_STATUS\":\r\n      return {\r\n        ...state,\r\n        statusText: action.data,\r\n        loading: true,\r\n        apiUrl: `${state.apiBaseUrl}${state.transferText}?status='${action.data}'&search='${state.searchText}'`,\r\n      };\r\n    case \"FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        tableBody: action.payload,\r\n        loading: false,\r\n      };\r\n    case \"FETCH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        tableBody: [],\r\n        loading: false,\r\n        errMsg: action.errMsg,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default TransferPageReducer;\r\n","import React, { useReducer, createContext, useEffect } from \"react\";\r\nimport { Container, Card } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport LoaderIcon from \"react-loader-icon\";\r\nimport TransferHeader from \"../Header/TransferHeader\";\r\nimport TransferList from \"../List/TransferList\";\r\nimport TransferPageState from \"./Page.state\";\r\nimport TransferPageReducer from \"./Page.reducer\";\r\nimport \"./TransferPage.style.css\";\r\n\r\nexport const TransferContext = createContext();\r\n\r\nconst TransferPage = () => {\r\n  const [state, dispatch] = useReducer(TransferPageReducer, TransferPageState);\r\n\r\n  useEffect(() => {\r\n    let tableData;\r\n    axios\r\n      .get(state.apiUrl)\r\n      .then((response) => {\r\n        switch (state.transferText) {\r\n          case \"users\":\r\n            tableData = response.data.map((item) => {\r\n              return {\r\n                id: item.id,\r\n                name: item.name,\r\n                userName: item.username,\r\n                email: item.email,\r\n                action: {\r\n                  edit: {\r\n                    active: false,\r\n                    link: \"\",\r\n                  },\r\n                  view: {\r\n                    active: true,\r\n                    link: \"\",\r\n                  },\r\n                  delete: {\r\n                    active: true,\r\n                    link: \"\",\r\n                  },\r\n                },\r\n              };\r\n            });\r\n            break;\r\n          case \"posts\":\r\n            tableData = response.data.map((item) => {\r\n              return {\r\n                id: item.id,\r\n                userId: item.userId,\r\n                title: item.title,\r\n                body: item.body,\r\n                action: {\r\n                  edit: {\r\n                    active: true,\r\n                    link: \"\",\r\n                  },\r\n                  view: {\r\n                    active: true,\r\n                    link: \"\",\r\n                  },\r\n                },\r\n              };\r\n            });\r\n            break;\r\n          default:\r\n            tableData = [];\r\n            break;\r\n        }\r\n        dispatch({\r\n          type: \"FETCH_SUCCESS\",\r\n          payload: tableData,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"FETCH_FAILURE\",\r\n          errMsg: err.message,\r\n        });\r\n      });\r\n  }, [state.transferText, state.searchText, state.statusText, state.apiUrl]);\r\n\r\n  return (\r\n    <div className=\"transfers-page\">\r\n      <Container fluid className=\"m-2\">\r\n        {state.loading ? (\r\n          <LoaderIcon type=\"bubbles\" color={\"green\"} />\r\n        ) : (\r\n          <TransferContext.Provider\r\n            value={{ headerData: state, dispatch: dispatch }}\r\n          >\r\n            <Card>\r\n              <Card.Header>\r\n                <TransferHeader />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <TransferList />\r\n              </Card.Body>\r\n            </Card>\r\n          </TransferContext.Provider>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferPage;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./TransferDetail.style.css\";\r\n\r\nconst TransferDetail = ({ transferDetail, dispatch }) => {\r\n  return (\r\n    <div className=\"transfer-initiation\">\r\n      {Object.entries(transferDetail).map(([key, item]) => {\r\n        return (\r\n          <Form.Group as={Row} className=\"mb-3\" key={key} controlId={key}>\r\n            {Object.entries(item).map(([index, column]) => {\r\n              const widthProp = column.width\r\n                ? column.width\r\n                : {\r\n                    span: column.span ? column.span : undefined,\r\n                    offset: column.offset ? column.offset : undefined,\r\n                  };\r\n              const keyProp = `${key}_${index}`;\r\n              const containerClass = column.class ? column.class : undefined;\r\n              const containerId = column.id ? column.id : undefined;\r\n              const valueProp = column.value ? column.value : undefined;\r\n              const placeholderProp = column.placeholder\r\n                ? column.placeholder\r\n                : undefined;\r\n              const elmClass = column.elmClass ? column.elmClass : undefined;\r\n              const elmId = column.elmId ? column.elmId : undefined;\r\n              const changeHandler = column.onChange\r\n                ? column.changeHandler\r\n                  ? column.changeHandler\r\n                  : undefined\r\n                : undefined;\r\n              const clickHandler = column.onClick\r\n                ? column.clickHandler\r\n                  ? column.clickHandler\r\n                  : undefined\r\n                : undefined;\r\n\r\n              switch (column.type) {\r\n                case \"label\":\r\n                  return (\r\n                    <Form.Label\r\n                      column\r\n                      key={keyProp}\r\n                      md={widthProp}\r\n                      className={containerClass}\r\n                      id={containerId}\r\n                    >\r\n                      {valueProp}\r\n                    </Form.Label>\r\n                  );\r\n                case \"select\":\r\n                  return (\r\n                    <Col\r\n                      key={keyProp}\r\n                      md={widthProp}\r\n                      className={containerClass}\r\n                      id={containerId}\r\n                    >\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        aria-label={key}\r\n                        value={valueProp}\r\n                        placeholder={placeholderProp}\r\n                        className={elmClass}\r\n                        id={elmId}\r\n                        onChange={(e) => {\r\n                          if (changeHandler) {\r\n                            dispatch({\r\n                              ...changeHandler,\r\n                              data: e.target.value,\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {Object.entries(column.options).map(\r\n                          ([optKey, optValue]) => (\r\n                            <option key={optKey} value={optValue}>\r\n                              {optValue}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </Form.Control>\r\n                    </Col>\r\n                  );\r\n                case \"search\":\r\n                  return (\r\n                    <Col\r\n                      key={keyProp}\r\n                      md={widthProp}\r\n                      className={containerClass}\r\n                      id={containerId}\r\n                    >\r\n                      <InputGroup>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder={placeholderProp}\r\n                          value={valueProp}\r\n                          className={elmClass}\r\n                          id={elmId}\r\n                          onChange={(e) => {\r\n                            if (changeHandler) {\r\n                              dispatch({\r\n                                ...changeHandler,\r\n                                data: e.target.value,\r\n                              });\r\n                            }\r\n                          }}\r\n                        />\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FontAwesomeIcon\r\n                              icon={faSearch}\r\n                              onClick={() => {\r\n                                if (clickHandler) {\r\n                                  dispatch({\r\n                                    ...clickHandler,\r\n                                  });\r\n                                }\r\n                              }}\r\n                            />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                      </InputGroup>\r\n                    </Col>\r\n                  );\r\n                case \"textBox\":\r\n                  return (\r\n                    <Col\r\n                      key={keyProp}\r\n                      md={widthProp}\r\n                      className={containerClass}\r\n                      id={containerId}\r\n                    >\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder={placeholderProp}\r\n                        value={valueProp}\r\n                        className={elmClass}\r\n                        id={elmId}\r\n                        onChange={(e) => {\r\n                          if (changeHandler) {\r\n                            dispatch({\r\n                              ...changeHandler,\r\n                              data: e.target.value,\r\n                            });\r\n                          }\r\n                        }}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  );\r\n                case \"text\":\r\n                  return (\r\n                    <Col\r\n                      key={keyProp}\r\n                      md={widthProp}\r\n                      className={containerClass}\r\n                      id={containerId}\r\n                    >\r\n                      {valueProp}\r\n                    </Col>\r\n                  );\r\n                case \"date\":\r\n                  return (\r\n                    <Col\r\n                      key={keyProp}\r\n                      md={widthProp}\r\n                      className={containerClass}\r\n                      id={containerId}\r\n                    >\r\n                      <DatePicker\r\n                        className={elmClass}\r\n                        selected={valueProp}\r\n                        closeOnScroll={\r\n                          column.closeOnScroll ? column.closeOnScroll : true\r\n                        }\r\n                        dateFormat={\r\n                          column.dateFormat ? column.dateFormat : \"dd/MM/yyyy\"\r\n                        }\r\n                        onChange={(date) => {\r\n                          if (changeHandler) {\r\n                            dispatch({\r\n                              ...changeHandler,\r\n                              data: date,\r\n                            });\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                case \"button\":\r\n                  return (\r\n                    <Col\r\n                      key={keyProp}\r\n                      md={widthProp}\r\n                      className={containerClass}\r\n                      id={containerId}\r\n                    >\r\n                      <Button\r\n                        variant={column.variant ? column.variant : \"primary\"}\r\n                        className={elmClass}\r\n                        id={elmId}\r\n                      >\r\n                        {valueProp}\r\n                      </Button>\r\n                    </Col>\r\n                  );\r\n                default:\r\n                  return <div key={keyProp} />;\r\n              }\r\n            })}\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferDetail;\r\n","const TransferInitiationState = {\r\n  chooseTransferType: {\r\n    col1: {\r\n      type: \"label\",\r\n      value: \"Transfer Type\",\r\n      width: \"2\",\r\n    },\r\n    col2: {\r\n      type: \"select\",\r\n      width: \"8\",\r\n      value: \"one\",\r\n      options: {\r\n        one: \"One\",\r\n        two: \"Two\",\r\n      },\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"FILTER_TRANSFER\",\r\n        objKey: \"chooseTransferType\",\r\n        colKey: \"col2\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  employeeType: {\r\n    col1: {\r\n      type: \"label\",\r\n      value: \"Employee Type\",\r\n      width: \"2\",\r\n    },\r\n    col2: {\r\n      type: \"search\",\r\n      placeholder: \"search employee\",\r\n      width: \"8\",\r\n      value: \"\",\r\n      searchValue: \"\",\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"SEARCH_INPUT\",\r\n        objKey: \"employeeType\",\r\n        colKey: \"col2\",\r\n        valKey: \"value\",\r\n      },\r\n      onClick: true,\r\n      clickHandler: {\r\n        type: \"SEARCH_EMPLOYEE\",\r\n        objKey: \"employeeType\",\r\n        colKey: \"col2\",\r\n        valKey: \"searchValue\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationHeader: {\r\n    col1: {\r\n      type: \"text\",\r\n      value: \"Current\",\r\n      class: \"font-weight-bold my-2\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n    },\r\n    col2: {\r\n      type: \"text\",\r\n      value: \"New\",\r\n      class: \"font-weight-bold my-2\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n    },\r\n  },\r\n  transferInitiationDept: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Department\",\r\n    },\r\n    col2: {\r\n      type: \"text\",\r\n      width: \"3\",\r\n      value: \"Retail\",\r\n      class: \"text-primary\",\r\n    },\r\n    col3: {\r\n      type: \"select\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n      value: \"production\",\r\n      elmClass: \"text-primary\",\r\n      options: {\r\n        production: \"Production\",\r\n        staging: \"Staging\",\r\n      },\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_DEPT\",\r\n        objKey: \"transferInitiationDept\",\r\n        colKey: \"col3\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationPosition: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Position\",\r\n    },\r\n    col2: {\r\n      type: \"text\",\r\n      width: \"3\",\r\n      value: \"Sports Leader\",\r\n      class: \"text-primary\",\r\n    },\r\n    col3: {\r\n      type: \"select\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n      value: \"production team lead\",\r\n      elmClass: \"text-primary\",\r\n      options: {\r\n        productionTeamLead: \"production team lead\",\r\n        stagingTeamLead: \"Staging Team Lead\",\r\n      },\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_POSITION\",\r\n        objKey: \"transferInitiationPosition\",\r\n        colKey: \"col3\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationCostCentre: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Cost Centre\",\r\n    },\r\n    col2: {\r\n      type: \"text\",\r\n      width: \"3\",\r\n      value: \"IN1058\",\r\n      class: \"text-primary\",\r\n    },\r\n    col3: {\r\n      type: \"select\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n      value: \"IN1058LK\",\r\n      elmClass: \"text-primary\",\r\n      options: {\r\n        IN1058LK: \"IN1058LK\",\r\n        IN1058LH: \"IN1058LH\",\r\n      },\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_COST_CENTRE\",\r\n        objKey: \"transferInitiationCostCentre\",\r\n        colKey: \"col3\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationManager: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Manager\",\r\n    },\r\n    col2: {\r\n      type: \"text\",\r\n      width: \"3\",\r\n      value: \"Gerald Rakesh\",\r\n      class: \"text-primary\",\r\n    },\r\n    col3: {\r\n      type: \"select\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n      value: \"mohan\",\r\n      elmClass: \"text-primary\",\r\n      options: {\r\n        mohan: \"Mohan Raj\",\r\n        sreedhar: \"Sreedhar\",\r\n      },\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_INITIATION_MANAGET\",\r\n        objKey: \"transferInitiationManager\",\r\n        colKey: \"col3\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationLocation: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Location\",\r\n    },\r\n    col2: {\r\n      type: \"text\",\r\n      width: \"3\",\r\n      value: \"Karnataka\",\r\n      class: \"text-primary\",\r\n    },\r\n    col3: {\r\n      type: \"select\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n      value: \"karnataka\",\r\n      elmClass: \"text-primary\",\r\n      options: {\r\n        karnataka: \"Karnataka\",\r\n        goa: \"Goa\",\r\n      },\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_LOCATION\",\r\n        objKey: \"transferInitiationLocation\",\r\n        colKey: \"col3\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationFixedGross: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Fixed Gross\",\r\n    },\r\n    col2: {\r\n      type: \"text\",\r\n      width: \"3\",\r\n      value: \"15,000\",\r\n      class: \"text-primary\",\r\n    },\r\n    col3: {\r\n      type: \"textBox\",\r\n      span: \"3\",\r\n      offset: \"2\",\r\n      placeholder: \"20,000\",\r\n      value: \"20,000\",\r\n      elmClass: \"text-primary\",\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_FIXED_GROSS\",\r\n        objKey: \"transferInitiationFixedGross\",\r\n        colKey: \"col3\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationPercent: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Bonus In Percent (Optional)\",\r\n    },\r\n    col2: {\r\n      type: \"textBox\",\r\n      width: \"3\",\r\n      value: \"5%\",\r\n      elmId: \"transferInitiationCurrentPercent\",\r\n      elmClass: \"text-primary\",\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_CURRENT_PERCENT\",\r\n        objKey: \"transferInitiationPercent\",\r\n        colKey: \"col2\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n    col3: {\r\n      type: \"text\",\r\n      width: \"2\",\r\n      class: \"pt-2\",\r\n      value: \"Relocation Bonus\",\r\n    },\r\n    col4: {\r\n      type: \"textBox\",\r\n      width: \"3\",\r\n      placeholder: \"300\",\r\n      value: \"300\",\r\n      elmId: \"transferInitiationBonus\",\r\n      elmClass: \"text-primary\",\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_BONUS\",\r\n        objKey: \"transferInitiationPercent\",\r\n        colKey: \"col4\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationEffectiveDate: {\r\n    col1: {\r\n      type: \"label\",\r\n      width: \"2\",\r\n      value: \"Effective Date\",\r\n    },\r\n    col2: {\r\n      type: \"date\",\r\n      width: \"3\",\r\n      value: new Date(),\r\n      closeOnScroll: true,\r\n      dateFormat: \"yyyy/MM/dd\",\r\n      elmClass: \"text-primary form-control\",\r\n      onChange: true,\r\n      changeHandler: {\r\n        type: \"CHANGE_EFFECTIVE_DATE\",\r\n        objKey: \"transferInitiationEffectiveDate\",\r\n        colKey: \"col2\",\r\n        valKey: \"value\",\r\n      },\r\n    },\r\n  },\r\n  transferInitiationFooter: {\r\n    col1: {\r\n      type: \"button\",\r\n      variant: \"primary\",\r\n      value: \"Save\",\r\n      span: \"2\",\r\n      offset: \"3\",\r\n      elmClass: \"btn-block\",\r\n      class: \"mt-4\",\r\n    },\r\n    col2: {\r\n      type: \"button\",\r\n      variant: \"primary\",\r\n      value: \"Generate Transfer Letter\",\r\n      span: \"3\",\r\n      offset: \"1\",\r\n      class: \"mt-4\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default TransferInitiationState;\r\n","const TransferIntiationReducer = (state, action) => {\r\n  if (action.data) {\r\n    state[action.objKey][action.colKey][action.valKey] = action.data;\r\n  }\r\n  switch (action.type) {\r\n    case \"FILTER_TRANSFER\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"SEARCH_INPUT\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"SEARCH_EMPLOYEE\":\r\n      state[action.objKey][action.colKey][action.valKey] =\r\n        state[action.objKey][action.colKey][\"value\"];\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_DEPT\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_POSITION\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_COST_CENTRE\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_INITIATION_MANAGET\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_LOCATION\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_FIXED_GROSS\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_CURRENT_PERCENT\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_BONUS\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"CHANGE_EFFECTIVE_DATE\":\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default TransferIntiationReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport { Container, Card } from \"react-bootstrap\";\r\nimport TransferDetail from \"../Detail/TransferDetail\";\r\nimport TransferInitiationState from \"./Initiation.state\";\r\nimport TransferIntiationReducer from \"./Initiation.reducer\";\r\nimport \"./TransferInitiation.style.css\";\r\n\r\nconst TransferInitiation = () => {\r\n  const [state, dispatch] = useReducer(\r\n    TransferIntiationReducer,\r\n    TransferInitiationState\r\n  );\r\n\r\n  return (\r\n    <div className=\"transfer-initiation\">\r\n      <Container className=\"m-2\">\r\n        <Card>\r\n          <Card.Header>\r\n            <h5 className=\"text-uppercase\">Transfer Initiation</h5>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <TransferDetail transferDetail={state} dispatch={dispatch} />\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferInitiation;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst ModalComp = ({ title, body, isShow, modalClose }) => {\r\n  return (\r\n    <Modal show={isShow} onHide={modalClose} size=\"md\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={modalClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalComp;\r\n","import React, { memo } from \"react\";\r\nimport { Button, Row, Col } from \"react-bootstrap\";\r\n\r\nconst ModalButtons = ({ handleButtonClick }) => {\r\n  return (\r\n    <Row>\r\n      <Col\r\n        className=\"d-flex justify-content-around\"\r\n        md={{ offset: 2, span: 8 }}\r\n      >\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => handleButtonClick(\"Button 1\", \"Button 1 Body\")}\r\n        >\r\n          Button 1\r\n        </Button>\r\n        <Button\r\n          variant=\"info\"\r\n          onClick={() => handleButtonClick(\"Button 2\", \"Button 2 Body\")}\r\n        >\r\n          Button 2\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={() => handleButtonClick(\"Danger\", \"Danger Text\")}\r\n        >\r\n          Danger\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default memo(ModalButtons);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport ModalComp from \"./ModalComp\";\r\nimport ModalButtons from \"./ModalButtons\";\r\n\r\nconst initialState = {\r\n  isShow: false,\r\n  title: \"\",\r\n  body: \"\",\r\n};\r\n\r\nconst ShowModal = () => {\r\n  const [modalData, setModalData] = useState(initialState);\r\n\r\n  const handleButtonClick = useCallback(\r\n    (title, body) => {\r\n      setModalData({\r\n        isShow: true,\r\n        title: title,\r\n        body: body,\r\n      });\r\n    },\r\n    [modalData.title, modalData.body]\r\n  );\r\n\r\n  const handleModalClose = () => {\r\n    setModalData({\r\n      ...modalData,\r\n      isShow: false,\r\n    });\r\n  };\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Card>\r\n        <Card.Header className=\"h3 text-uppercase text-center\">\r\n          Show Modals\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <ModalButtons handleButtonClick={handleButtonClick} />\r\n          <ModalComp {...modalData} modalClose={handleModalClose} />\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowModal;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport ModalComp from \"../ModalComp\";\r\nimport \"./Intetest.style.css\";\r\n\r\nconst InterestPage = () => {\r\n  const modalState = {\r\n    isShow: false,\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n\r\n  const [modalData, setModalData] = useState(modalState);\r\n\r\n  const [principal, setPrincipal] = useState({\r\n    value: \"\",\r\n    errMsg: \"\",\r\n  });\r\n  const [interest, setInterest] = useState({\r\n    value: \"\",\r\n    errMsg: \"\",\r\n  });\r\n  const [fromDate, setFromDate] = useState({\r\n    value: new Date(),\r\n    errMsg: \"\",\r\n  });\r\n  const [toDate, setToDate] = useState({\r\n    value: new Date(),\r\n    errMsg: \"\",\r\n  });\r\n\r\n  const handleModalClose = () => {\r\n    setModalData({\r\n      ...modalData,\r\n      isShow: false,\r\n    });\r\n  };\r\n\r\n  const principalAmountHandler = (e) => {\r\n    setPrincipal({\r\n      value: e.target.value,\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n\r\n  const interestHandler = (e) => {\r\n    setInterest({\r\n      value: e.target.value,\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n\r\n  const fromDateHandler = (date) => {\r\n    setFromDate({\r\n      value: date,\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n\r\n  const toDateHandler = (date) => {\r\n    setToDate({\r\n      value: date,\r\n      errMsg: \"\",\r\n    });\r\n  };\r\n\r\n  const checkValidation = () => {\r\n    let formValid = true;\r\n\r\n    if (principal.value === \"\") {\r\n      formValid = false;\r\n      setPrincipal({\r\n        ...principal,\r\n        errMsg: \"Please enter principal amount\",\r\n      });\r\n    }\r\n\r\n    if (interest.value === \"\") {\r\n      formValid = false;\r\n      setInterest({\r\n        ...interest,\r\n        errMsg: \"Please enter interest\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      fromDate.value === null ||\r\n      fromDate.value === undefined ||\r\n      fromDate.value === \"\"\r\n    ) {\r\n      formValid = false;\r\n      setFromDate({\r\n        ...fromDate,\r\n        errMsg: \"Please selet from date\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      toDate.value === null ||\r\n      toDate.value === undefined ||\r\n      toDate.value === \"\"\r\n    ) {\r\n      formValid = false;\r\n      setToDate({\r\n        ...toDate,\r\n        errMsg: \"Please selet to date\",\r\n      });\r\n    }\r\n\r\n    return formValid;\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formValid = checkValidation();\r\n    if (formValid === true) {\r\n      const eDate = moment(fromDate.value);\r\n      const rDate = moment(toDate.value);\r\n      rDate.add(1, \"days\");\r\n      const months = rDate.diff(eDate, \"months\", true).toFixed(2);\r\n      const interestValue = (\r\n        (principal.value * months * interest.value) /\r\n        100\r\n      ).toFixed(2);\r\n      setModalData({\r\n        isShow: true,\r\n        title: \"Simple Interest\",\r\n        body: (\r\n          <>\r\n            <Row className=\"mb-3\">\r\n              <Col md={6}>Principal Amount: </Col>\r\n              <Col md={6} className=\"font-weight-bold\">\r\n                {principal.value}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Col md={6}>Rate of Interest: </Col>\r\n              <Col md={6} className=\"font-weight-bold\">\r\n                {interest.value}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Col md={6}>Time Duration: </Col>\r\n              <Col md={6} className=\"font-weight-bold\">\r\n                {calDateDiff()}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Col md={6}>Total Interest: </Col>\r\n              <Col md={6} className=\"font-weight-bold\">\r\n                {interestValue}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Col md={6}>Total Money: </Col>\r\n              <Col md={6} className=\"font-weight-bold\">\r\n                {(\r\n                  parseFloat(principal.value) + parseFloat(interestValue)\r\n                ).toFixed(2)}\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  const calDateDiff = () => {\r\n    const eDate = moment(fromDate.value);\r\n    const rDate = moment(toDate.value);\r\n    rDate.add(1, \"days\");\r\n    const years = rDate.diff(eDate, \"year\");\r\n    eDate.add(years, \"years\");\r\n    const months = rDate.diff(eDate, \"months\");\r\n    eDate.add(months, \"months\");\r\n    const days = rDate.diff(eDate, \"days\");\r\n    const projectDuration = `${\r\n      years > 0 ? (years > 1 ? years + \" Years\" : years + \" Year\") : \"\"\r\n    } ${\r\n      months > 0 ? (months > 1 ? months + \" months\" : months + \" month\") : \"\"\r\n    } ${days > 0 ? (days > 1 ? days + \" days\" : days + \" day\") : \"\"}`;\r\n    return projectDuration.trim() === \"\" ? \"0 days\" : projectDuration.trim();\r\n  };\r\n\r\n  return (\r\n    <Card className=\"col-md-8 offset-md-2 mt-5\">\r\n      <Card.Header className=\"text-center h3\">\r\n        Calculate Simple Interest\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form>\r\n          <Row className=\"mb-3\">\r\n            <Col md={{ span: 4, offset: 1 }}>\r\n              <Form.Group controlId=\"principalAmount\">\r\n                <Form.Label>Principal Amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Principal Amount\"\r\n                  value={principal.value}\r\n                  onChange={principalAmountHandler}\r\n                />\r\n                {principal.errMsg !== \"\" && (\r\n                  <div className=\"text-danger\">{principal.errMsg}</div>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 2 }}>\r\n              <Form.Group controlId=\"interstAmount\">\r\n                <Form.Label>Rate of Interest</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Interest\"\r\n                  value={interest.value}\r\n                  onChange={interestHandler}\r\n                />\r\n                {interest.errMsg !== \"\" && (\r\n                  <div className=\"text-danger\">{interest.errMsg}</div>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col md={{ span: 4, offset: 1 }}>\r\n              <Form.Group controlId=\"fromDate\">\r\n                <Form.Label>From Date</Form.Label>\r\n                <div>\r\n                  <DatePicker\r\n                    className=\"form-control\"\r\n                    placeholder=\"from date\"\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    closeOnScroll={false}\r\n                    selected={fromDate.value}\r\n                    maxDate={new Date()}\r\n                    showMonthDropdown\r\n                    showYearDropdown\r\n                    dropdownMode=\"select\"\r\n                    onChange={(date) => fromDateHandler(date)}\r\n                  />\r\n                </div>\r\n                {fromDate.errMsg !== \"\" && (\r\n                  <div className=\"text-danger\">{fromDate.errMsg}</div>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 2 }}>\r\n              <Form.Group controlId=\"toDate\">\r\n                <Form.Label>To Date</Form.Label>\r\n                <div>\r\n                  <DatePicker\r\n                    className=\"form-control\"\r\n                    placeholder=\"to date\"\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    closeOnScroll={false}\r\n                    selected={toDate.value}\r\n                    minDate={fromDate.value}\r\n                    showMonthDropdown\r\n                    showYearDropdown\r\n                    dropdownMode=\"select\"\r\n                    onChange={(date) => toDateHandler(date)}\r\n                  />\r\n                </div>\r\n                {toDate.errMsg !== \"\" && (\r\n                  <div className=\"text-danger\">{toDate.errMsg}</div>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"my-3\">\r\n            <Col className=\"text-center\">\r\n              <Button variant=\"primary\" type=\"button\" onClick={submitHandler}>\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <ModalComp {...modalData} modalClose={handleModalClose} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InterestPage;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TransferPage from \"./components/Transfers/Page/TransferPage\";\nimport TransferInitiation from \"./components/Transfers/Initiation/TransferInitiation\";\nimport ShowModal from \"./components/ShowModal\";\nimport InterestPage from \"./components/Interest/Interest.component\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/transfer-initiate\" component={TransferInitiation} />\n        <Route exact path=\"/transfers\" component={TransferPage} />\n        <Route exact path=\"/model-demo\" component={ShowModal} />\n      </Switch>\n      <InterestPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}